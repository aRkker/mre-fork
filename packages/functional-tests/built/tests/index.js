"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const actor_attachment_test_1 = tslib_1.__importDefault(require("./actor-attachment-test"));
const actor_spam_test_1 = tslib_1.__importDefault(require("./actor-spam-test"));
const altspacevr_library_test_1 = tslib_1.__importDefault(require("./altspacevr-library-test"));
const altspacevr_user_filter_test_1 = tslib_1.__importDefault(require("./altspacevr-user-filter-test"));
const altspacevr_video_test_1 = tslib_1.__importDefault(require("./altspacevr-video-test"));
const animation_blend_test_1 = tslib_1.__importDefault(require("./animation-blend-test"));
const animation_dynamic_test_1 = tslib_1.__importDefault(require("./animation-dynamic-test"));
const animation_relative_test_1 = tslib_1.__importDefault(require("./animation-relative-test"));
const animation_scale_test_1 = tslib_1.__importDefault(require("./animation-scale-test"));
const animation_sync_test_1 = tslib_1.__importDefault(require("./animation-sync-test"));
const animation_to_test_1 = tslib_1.__importDefault(require("./animation-to-test"));
const asset_early_assignment_test_1 = tslib_1.__importDefault(require("./asset-early-assignment-test"));
const asset_mutability_test_1 = tslib_1.__importDefault(require("./asset-mutability-test"));
const asset_preload_test_1 = tslib_1.__importDefault(require("./asset-preload-test"));
const asset_unload_test_1 = tslib_1.__importDefault(require("./asset-unload-test"));
const button_behavior_test_1 = tslib_1.__importDefault(require("./button-behavior-test"));
const button_targeting_test_1 = tslib_1.__importDefault(require("./button-targeting-test"));
const clock_sync_test_1 = tslib_1.__importDefault(require("./clock-sync-test"));
const collision_layer_test_1 = tslib_1.__importDefault(require("./collision-layer-test"));
const failure_test_1 = tslib_1.__importDefault(require("./failure-test"));
const gltf_actor_sync_test_1 = tslib_1.__importDefault(require("./gltf-actor-sync-test"));
const gltf_concurrency_test_1 = tslib_1.__importDefault(require("./gltf-concurrency-test"));
const gltf_gen_test_1 = tslib_1.__importDefault(require("./gltf-gen-test"));
const grab_test_1 = tslib_1.__importDefault(require("./grab-test"));
const grid_test_1 = tslib_1.__importDefault(require("./grid-test"));
const input_test_1 = tslib_1.__importDefault(require("./input-test"));
const library_fail_test_1 = tslib_1.__importDefault(require("./library-fail-test"));
const light_test_1 = tslib_1.__importDefault(require("./light-test"));
const look_at_test_1 = tslib_1.__importDefault(require("./look-at-test"));
const livestream_test_1 = tslib_1.__importDefault(require("./livestream-test"));
const physics_bounce_test_1 = tslib_1.__importDefault(require("./physics-bounce-test"));
const physics_exclusive_1 = tslib_1.__importDefault(require("./physics-exclusive"));
const physics_stack_test_1 = tslib_1.__importDefault(require("./physics-stack-test"));
const physics_friction_test_1 = tslib_1.__importDefault(require("./physics-friction-test"));
const physics_sim_test_1 = tslib_1.__importDefault(require("./physics-sim-test"));
const physics_collision_1 = tslib_1.__importDefault(require("./physics-collision"));
const physics_free_fall_1 = tslib_1.__importDefault(require("./physics-free-fall"));
const physics_head_collision_1 = tslib_1.__importDefault(require("./physics-head-collision"));
const physics_dynamic_and_kinematic_1 = tslib_1.__importDefault(require("./physics-dynamic-and-kinematic"));
const physics_pile_test_1 = tslib_1.__importDefault(require("./physics-pile-test"));
const primitives_test_1 = tslib_1.__importDefault(require("./primitives-test"));
const prompt_test_1 = tslib_1.__importDefault(require("./prompt-test"));
const reparent_test_1 = tslib_1.__importDefault(require("./reparent-test"));
const sound_test_1 = tslib_1.__importDefault(require("./sound-test"));
const sound_sync_test_1 = tslib_1.__importDefault(require("./sound-sync-test"));
const stats_test_1 = tslib_1.__importDefault(require("./stats-test"));
const text_test_1 = tslib_1.__importDefault(require("./text-test"));
const transform_test_1 = tslib_1.__importDefault(require("./transform-test"));
const user_mask_test_1 = tslib_1.__importDefault(require("./user-mask-test"));
const user_test_1 = tslib_1.__importDefault(require("./user-test"));
const video_test_1 = tslib_1.__importDefault(require("./video-test"));
const video_sync_test_1 = tslib_1.__importDefault(require("./video-sync-test"));
const visibility_test_1 = tslib_1.__importDefault(require("./visibility-test"));
/**
 * Registry of functional tests. Add your test here.
 * *** KEEP LIST SORTED ***
 */
exports.Factories = {
    'actor-attachment': (...args) => new actor_attachment_test_1.default(...args),
    'actor-spam': (...args) => new actor_spam_test_1.default(...args),
    'altspacevr-library': (...args) => new altspacevr_library_test_1.default(...args),
    'altspacevr-user-filter': (...args) => new altspacevr_user_filter_test_1.default(...args),
    'altspacevr-video': (...args) => new altspacevr_video_test_1.default(...args),
    'animation-blend': (...args) => new animation_blend_test_1.default(...args),
    'animation-dynamic': (...args) => new animation_dynamic_test_1.default(...args),
    'animation-relative': (...args) => new animation_relative_test_1.default(...args),
    'animation-scale': (...args) => new animation_scale_test_1.default(...args),
    'animation-sync': (...args) => new animation_sync_test_1.default(...args),
    'animation-to': (...args) => new animation_to_test_1.default(...args),
    'asset-early-assignment': (...args) => new asset_early_assignment_test_1.default(...args),
    'asset-mutability': (...args) => new asset_mutability_test_1.default(...args),
    'asset-preload': (...args) => new asset_preload_test_1.default(...args),
    'asset-unload': (...args) => new asset_unload_test_1.default(...args),
    'button-behavior': (...args) => new button_behavior_test_1.default(...args),
    'button-targeting': (...args) => new button_targeting_test_1.default(...args),
    'clock-sync': (...args) => new clock_sync_test_1.default(...args),
    'collision-layer': (...args) => new collision_layer_test_1.default(...args),
    'failure': (...args) => new failure_test_1.default(...args),
    'gltf-actor-sync': (...args) => new gltf_actor_sync_test_1.default(...args),
    'gltf-concurrency': (...args) => new gltf_concurrency_test_1.default(...args),
    'gltf-gen': (...args) => new gltf_gen_test_1.default(...args),
    'grab': (...args) => new grab_test_1.default(...args),
    'grid': (...args) => new grid_test_1.default(...args),
    'input': (...args) => new input_test_1.default(...args),
    'library-fail': (...args) => new library_fail_test_1.default(...args),
    'light': (...args) => new light_test_1.default(...args),
    'livestream': (...args) => new livestream_test_1.default(...args),
    'look-at': (...args) => new look_at_test_1.default(...args),
    'physics-bounce': (...args) => new physics_bounce_test_1.default(...args),
    'physics-friction': (...args) => new physics_friction_test_1.default(...args),
    'physics-free-fall': (...args) => new physics_free_fall_1.default(...args),
    'physics-shared-and-exclusive': (...args) => new physics_exclusive_1.default(false, ...args),
    'physics-shared-and-exclusive-with-fixed-mass': (...args) => new physics_exclusive_1.default(true, ...args),
    'physics-collision-b.0': (...args) => new physics_collision_1.default(0, ...args),
    'physics-collision-b.8': (...args) => new physics_collision_1.default(0.8, ...args),
    'physics-head-collision-b.0': (...args) => new physics_head_collision_1.default(0, ...args),
    'physics-head-collision-b.2': (...args) => new physics_head_collision_1.default(0.2, ...args),
    'physics-pile-b.0v1': (...args) => new physics_pile_test_1.default(0, -1, 50, 0.0, ...args),
    'physics-pile-b.0v2': (...args) => new physics_pile_test_1.default(0, 100000, 70, 0.0, ...args),
    'physics-pile-b.0v3': (...args) => new physics_pile_test_1.default(0, -1, 50, 0.2, ...args),
    'physics-sim': (...args) => new physics_sim_test_1.default(...args),
    'physics-stack': (...args) => new physics_stack_test_1.default(4, 0.5, false, false, ...args),
    'physics-stack-mix': (...args) => new physics_stack_test_1.default(4, 0.5, true, false, ...args),
    'physics-set-authority': (...args) => new physics_stack_test_1.default(4, 0.5, true, true, ...args),
    'physics-dynamic-vs-kinematic': (...args) => new physics_dynamic_and_kinematic_1.default(...args),
    'primitives': (...args) => new primitives_test_1.default(...args),
    'prompt': (...args) => new prompt_test_1.default(...args),
    'reparent': (...args) => new reparent_test_1.default(...args),
    'sound': (...args) => new sound_test_1.default(...args),
    'sound-sync': (...args) => new sound_sync_test_1.default(...args),
    'stats': (...args) => new stats_test_1.default(...args),
    'text': (...args) => new text_test_1.default(...args),
    'transform': (...args) => new transform_test_1.default(...args),
    'user-mask': (...args) => new user_mask_test_1.default(...args),
    'user': (...args) => new user_test_1.default(...args),
    'video': (...args) => new video_test_1.default(...args),
    'video-sync': (...args) => new video_sync_test_1.default(...args),
    'visibility': (...args) => new visibility_test_1.default(...args),
};
//# sourceMappingURL=index.js.map